# 0-add_integer.txt

===========================
How to Use the add_integer Function
===========================

This module defines a function called `add_integer(a, b=98)`.

Usage
=====

The `add_integer()` function returns the addition of two integers. If the arguments are floats, they are first casted to integers before performing the addition.

Example Usage:

```python
>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(2, 3)
5
>>> add_integer(2, -3)
-1
>>> add_integer(2.0, 3.0)
5
>>> add_integer(2.9, 0.2)
2
>>> add_integer(-2.9, -0.2)
-2
>>> add_integer(2.3, -3)
-1
>>> add_integer(2)
100
>>> add_integer("hello", 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 12, in add_integer
TypeError: a must be an integer or b must be an integer
>>> add_integer(2, "hello")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 15, in add_integer
TypeError: a must be an integer or b must be an integer
>>> add_integer(None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 12, in add_integer
TypeError: a must be an integer or b must be an integer
>>> add_integer(2.3, None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 15, in add_integer
TypeError: a must be an integer or b must be an integer
>>> add_integer("hello", "there")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 12, in add_integer
TypeError: a must be an integer or b must be an integer
>>> add_integer(float('inf'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 12, in add_integer
OverflowError: cannot convert float infinity to integer
